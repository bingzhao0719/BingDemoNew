不能只了解，要知道怎么做，步骤
千聊
1.如何做插件化、组件化
1)组件化：
组件化实践：https://juejin.im/post/6844903649102004231
组件化理解：https://www.jianshu.com/p/79e4df63f31f
实现组件化步骤：1.建立组件，每个组件可以单独的运行调试，提升开发过程中项目的编译速度
             2.解决组件见页面跳转的问题，利用路由跳转ARouter
             3.解决组件间方法调用的问题，利用接口+实现，在公共module定义好通讯接口并提供工厂获取方法，组件实现接口，
             并在初始化时把实现加入到工厂中，别的组件就可以通过工厂获取到接口并获取到服务了。

2.音视频，怎么用原生播放一个视频
3.动画有哪些，还知道其它什么第三方动画框架
 1.view动画（视图动画）
 2.帧动画
   逐帧动画本质：按顺序播放一组预先设定好的图片
   使用步骤：1.设置动画，创建xml文件，定义好animation-list
           2.启动动画，AnimationDrawable.start(),animation-list最终会解析成AnimationDrawable对象
           作为ImageView的drawable
 3.属性动画
4.状态栏沉浸式效果步骤
文章：https://juejin.im/post/6844903490402123789
思路：1.设置布局全屏，使得内容可以侵入到状态栏下
     2.设置状态栏透明，使得状态栏看起来和内容同色
     3.因为内容会占用状态栏控件，因此文字可能会与状态栏重叠，在根部局设置属性android:fitsSystemWindows="true"，
     使得根部局设置了一个和状态栏高度一样得paddingTop，这样文字就不会与状态栏重叠了
适配代码：4.4只需设置FLAG_TRANSLUCENT_STATUS，但状态栏有个渐变效果
if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            Window window = getWindow();
            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
            window.getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);
            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
            window.setStatusBarColor(Color.TRANSPARENT);
        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
        }

5.项目中的核心技术，面试官要根据这个问你
6.fragment的生命周期，顺序要知道，比如第一个回调和最后一个回调是什么
onAttach->onCreate->onCreateView->onActivityCreate->onStart->onResume
->onPause->onStop->onDestroyView->onDestroy->onDetach
返回栈：

7.surfaceView的特点
8.原生与H5怎么交互，原生怎么调H5，H5怎么调原生
文章：https://www.jianshu.com/p/0b986d6e2e17
  1、webView如何加载H5页面
    //加载assets文件夹下的test.html页面
    mWebView.loadUrl("file:///android_asset/test.html");
    //加载网页
    mWebView.loadUrl("http://www.baidu.com");
  2、Android如何调用H5中的方法
    要想调用H5的方法，必须先设置webView支持
    webSettings.setJavaScriptEnabled(true);
    Android调用H5中的方法，其实很简单，直接调用就好，不需要额外的操作
    2.1 调用H5中无参无返回值的方法，假设H5中有个show()方法
      mWebView.loadUrl("JavaScript:show()");
    2.2 调用H5中带返回值的方法，假设H5中有个sum(int,int)方法
      可以调用mWebView.evaluateJavascript()方法，该方法只在安卓4.4以上版本适用
      mWebView.evaluateJavascript("sum(1,2)",new ValueCallback() {
             @Override
             public void on ReceiveValue(String value) {
                  Log.e(TAG,"onReceiveValue value=" + value);
             }
       });
    2.3 调用H5中带参数的方法
      当传入固定字符串时，用单引号括起来；当传入变量时，需要用转义字符
      mWebView.loadUrl("javascript:alertMessage('哈哈')");
      String  content="9880";
      mWebView.loadUrl("javascript:alertMessage(\""+content+"\")");
  3、H5如何调用Android中的方法
    思路：给js注入一个对象，然后调用该对象的方法
    步骤：1.在Android中新建一个类
          public  class  JsInteration  {
                @JavascriptInterface
                public  String  back() {
                       return "hello world";
                 }
          }
        2.注入对象，其中android是对象的别名
          mWebView.addJavascriptInterface(new JsInteration(),"android");
        3.H5调用方法
          function s() {
                var result=window.android.back();
                document.getElementById("p").innerHTML=result;
          }




9.svg动画是否了解，原理是什么
10.项目用的是什么网络请求框架，说了用okhttp,然后又问没用retrofit吗？估计是想问retrofit，然后继续问有没有看过okhttp源码
11.service的启动方式区别？onStartCommand返回值的意义？
  区别：1.启动方式：startService(Intent)：生命周期onCreate->onStartCommand->onDestroy；
                 bindService(Intent, ServiceConnection, int)：生命周期onCreate->onBind->onUnbind->onDestroy。
       2.停止方式：stopService(Intent)；unbindService(ServiceConnection)。
       3.startService：启动者退出了，service还在运行；bindService：启动者退出了，service也会退出。
       4.startService无法调用服务里的方法而bindService可以。
       5.多次startService后只需一次stopService就停止；
         多次bindService不会回调多次onCreate和onBind，会回调ServiceConnection的onServiceConnected，调用多少次
         bindService就需要多少次unbindService才能停掉service。
  onStartCommand返回值的意义：
  1.START_STICKY：服务所在进程被杀之后，服务会重新启动，intent为null
  2.START_NOT_STICKY:服务所在进程被杀之后，服务不会重新启动
  3.START_REDELIVER_INTENT：服务所在进程被杀之后，服务会重新启动，intent为最后一次的intent
  4.START_STICKY_COMPATIBILITY：START_STICKY的兼容版本
  文章：https://cloud.tencent.com/developer/article/1199550
12.怎么做一个即时通讯项目？我说使用socket保持长连接，又问怎么做socket？？

-------------------------------------------------------------------------------------------------------------
json解析核心思想：利用递归，遇到字符[，就解析一个JsonArray，遇到字符{，就解析一个JsonObject，遇到]或者}就把对象返回；遇到"，就解析
               一个字符串，再遇到"就可以返回name，接着就继续解析出value。
          步骤：1.获取键name
               2.获取name对应的value
               3.把name和value作为键值对存到一个map中
-------------------------------------------------------------------------------------------------------------
1.java的特性，继承有什么用处，多态有什么用处（尚德）
java面向对象三大特征：封装、继承、多态
封装：该隐藏的隐藏，该暴露的暴露，对外隐藏内部的属性与实现细节，只提供简单的访问接口。
继承：优点：主要是代码的复用，子类继承了父类的能力、多态的前提；缺点：类之间产生了耦合
多态：三个前提：1.子类继承父类 2.子类重写父类方法 3.父类引用指向子类实例对象
     调用方法时会执行子类的代码，多态是框架的基石，例如activity生命周期的回调，系统框架会根据类的路径发射创建出activity的子类
     对象，然后定义了一个父类Activity的引用指向之类，当调用对象的生命周期回调时，执行的是子类重写的方法。
2.反射是什么，在哪里用到，怎么利用反射创建一个对象（尚德）
反射是指根据类的Class对象创建对象实例，访问类或者对象的属性与方法的过程。
Android系统中的组件就是利用反射生成实例对象的。
两种反射方法生成对象：1.利用Class对象的newInstance方法生成，该方法只能调用类的无参构造方法
                  2.根据Class对象获取Constructor对象，利用Constructor对象的newInstance方法生成，该方法可以调用类的有参构造
3.代理模式与装饰模式的区别，手写一个代理模式，一个动态模式（尚德）

4.对象加载的过程，属性先加载还是方法先加载（尚德）
5.垃圾回收机制与jvm结构（尚德）
6.自定义view，事件分发机制讲一讲（尚德）
7.http与https的区别（尚德）
8.activity的启动模式，以及各启动模式生命周期问题（尚德）
9.静态方法，静态对象为什么不能继承（尚德）
10.activity怎么启动service，activity与service交互，service与thread的区别（尚德）
11.介绍一下Android动画（尚德）
12.launcher启动app的流程，中间有几种跨进程通信（尚德）
13.handler通信，binder通信（尚德）
14.你碰到过什么内存泄露，怎么处理（尚德）
15.RxJava怎么切换线程（尚德）
16.fragment hide show生命周期（尚德）
17.平常有用到什么锁，synchronize底层原理是什么（尚德）









