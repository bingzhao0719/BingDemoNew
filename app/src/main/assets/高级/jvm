虚拟机的内存布局
jvm运行时数据区域：程序计数器、虚拟机栈、本地方法栈、堆、方法区

程序计数器：线程私有，存的是指令的索引（行号），虚拟机根据这个索引（行号）找到指令执行
虚拟机栈：线程私有，保存的是栈帧，是辅助jvm执行方法的数据结构，方法的执行和退出对应着栈帧的入栈和出栈
本地方法栈：线程私有
堆：线程共享，保存的是对象实例
方法区：线程共享，保存的是类的常量、静态变量；当一个class文件被虚拟机加载到内存之后会先在方法区创建对应的数据结构，并生成Class对象
     （hotspot虚拟机中Class对象是在方法区中而不是堆中）

栈帧：局部变量表、操作数栈、动态连接、方法返回地址
局部变量表：是一组变量值存储空间，用来存放方法参数和方法内定义的局部变量，在class文件方法Code属性的max_locals指定

如何判断一个对象是否是生还是死（是否应该被回收）
1.引用计数算法：在对象中有个计数器，只有要变量引用改对象，计数器加1，注销引用减1，如果计数器的数大于等于1的表示对象还是活的
            缺点：有循环引用的问题
2.可达性分析算法：只要对象到GC Roots有引用链就表示对象是活的，主流的商业虚拟机用的都是该算法
可以作为GC Roots的对象：虚拟机栈中的变量（虚拟机栈中的局部变量表中的变量）、静态变量